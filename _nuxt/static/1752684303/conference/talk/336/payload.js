__NUXT_JSONP__("/conference/talk/336", (function(a){return {data:[{speechData:{id:336,begin_time:"2025-09-07T02:50:00Z",end_time:"2025-09-07T03:20:00Z",is_remote:false,location:"6-r2",youtube_id:a,title:"Maintainable Python Deployments at Scale: Decoupling Build from Runtime",category:"PRAC",language:"ENEN",python_level:"INTERMEDIATE",recording_policy:true,abstract:"Modern Python deployments often default to bundling application code, dependencies, and system configuration into Docker-based deployments. While this approach provides portability and fast startup, it can grow complex over time—especially in organizations with many teams and shared infrastructure—leading to maintainability and scalability challenges.\r\n\r\nThis talk explores how Python-native packaging and environment management can support lightweight, production-ready deployments without sacrificing Docker's benefits. We’ll look at how tools like zipapp (PEP 441) can bundle Python applications, and share strategies for caching Python dependencies within virtual environments to improve startup performance. We'll review examples of how these are integrated into real-world systems. Whether you’re deploying to EMR, Kubernetes, or other infrastructure, you’ll leave with practical patterns—and a clearer mental model for architecting and deploying Python applications at scale.",detailed_description:"This talk is for platform engineers and infrastructure-minded Python developers responsible for deploying Python applications in production environments. It is especially relevant for those facing challenges with startup latency, maintainability, or cost in horizontally scalable systems.\r\n\r\nThis talk focuses on how to separate Python application code, dependencies, and system-level configuration to enable more sustainable and performant deployments. You’ll leave with actionable patterns, practical tooling examples, and a better framework for thinking about Python deployments beyond the default Docker-first approach.\r\n\r\n### Libraries Discussed\r\n* [PEP 441](https:\u002F\u002Fpeps.python.org\u002Fpep-0441\u002F): Using Python’s built-in zip application format (zipapp) to bundle code and dependencies into portable executables.\r\n* [shiv](https:\u002F\u002Fshiv.readthedocs.io\u002Fen\u002Flatest\u002F): A tool that builds self-contained .pyz archives from Python projects.\r\n* [virtualenv](https:\u002F\u002Fvirtualenv.pypa.io\u002Fen\u002Flatest\u002F) and [pyenv virtualenv](https:\u002F\u002Fgithub.com\u002Fpyenv\u002Fpyenv-virtualenv?tab=readme-ov-file): How understanding Python virtual environments enables caching and reuse in autoscaling environments.",slide_link:a,slido_embed_link:a,hackmd_embed_link:a,speakers:[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002F6f\u002Fa6\u002F6fa6a032e32bb0a971e065ed6c14ef25.jpg",name:"Justin Lee",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fleejustin",twitter_profile_url:a,facebook_profile_url:a,bio:"Justin is a software engineer at Notion, where he works on AI and cloud infrastructure. He has over a decade of experience building scalable systems, developer tooling, and production-grade cloud platforms. He’s the course instructor for several Udacity Nanodegree programs on microservices, cloud-native architecture, and modern DevOps. Justin has also given talks and technical training through Arc.dev and developer community events. He enjoys designing systems that are not only powerful, but—most importantly—practical.\r\n\r\nOutside of work, he bakes pizza, trains in Brazilian Jiu Jitsu, and is obsessed with chihuahuas. He’s fluent in English, and speaks Mandarin and Cantonese fluently - please come say hi!"}],event_type:"talk"}}],fetch:{},mutations:[]}}("")));