window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002Fpycontw-frontend\u002F_nuxt\u002Fstatic\u002F1753065320",layout:"default",error:d,state:{sponsorsData:[],jobsData:[],schedulesData:[],keynotesData:[],youtubeInfo:[],speechesData:[],speechData:{id:338,begin_time:"2025-09-07T05:20:00Z",end_time:"2025-09-07T06:05:00Z",is_remote:b,location:"1-r3",youtube_id:c,title:"What does = do?",category:"CORE",language:"ENEN",python_level:"INTERMEDIATE",recording_policy:a,abstract:"We use assignment all the time in Python. But what really happens when we use an = in our code? The answer is: It depends. In this talk, I'll explore what happens when we assign a value to a variable, when we mutate an existing value, and when we assign to an attribute. Along the way, we'll explore variable scopes, byte codes, and descriptors. By the end of this talk, you'll appreciate all the hard work that the little = sign is doing, and the remarkable stuff that happens behind the scenes when you use it.",detailed_description:"People think that = is \"just\" assignment. But actually, depending on what's on the left side of the `=` operator, lots of different things can happen.\r\n\r\nIn this talk, which starts with basics but goes onto some advanced topics at the end, you'll see that `=` does a lot of different things, and that we can customize those using a variety of \"dunder\" magic methods and classes.\r\n\r\n- First we'll talk about variables\r\n- Then we'll talk about local and enclosing variables, and all of the scoping stuff that happens in our functions. The fact that assignment is caught by the compiler and treated differently in various contexts is crucial\r\n- But that was all *assignment*. It turns out that `=` does mutation as well as assignment, depending on what's on the left side. What happens when we mutate lists and dicts?\r\n- But wait: We can also assign to attributes. And people don't really understand that attributes are different from variables. They're a whole different storage mechanism\r\n- Attributes are a bit magical, in that if you assign to them, you might update their contents. But if you define a property, then assigning can lead to a method being invoked.\r\n- How do properties work, via the descripotor protocol, which is at the base of everything in Python. If you assign to an attribute, you might invoke a method.\r\n- To avoid memory leaks in defining descriptors, we often want to use a WeakKeyDict\r\n\r\nThe simple `=` does a *lot* of things, and this is an intermediate lecture because I'll be covering some advanced ideas, and I'll have to go at a relatively fast clip to ensure I can cover everything.",slide_link:c,slido_embed_link:c,hackmd_embed_link:c,speakers:[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002Fa1\u002Fb5\u002Fa1b59885025365453010497e0e846ecb.jpg",name:"Reuven M. Lerner",github_profile_url:"https:\u002F\u002Fgithub.com\u002Freuven",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002Freuvenmlerner",facebook_profile_url:"https:\u002F\u002Fwww.facebook.com\u002Freuvenmlerner",bio:"Teaching Python and data science since 1995. Instructor at LernerPython. Author of \"Python Workout\" and \"Pandas Workout\". Publisher of the \"Better developers\" and \"Bamboo Weekly\" newsletters.  I spend each day trying to help people improve their Python skills."}],event_type:"talk"},relatedData:[],reviewerData:[],configs:{conferenceName:"PyCon TW",conferenceYear:"2025",conferenceDate:"2025-09-06",showAboutStaffPage:b,showConferencePage:a,showSchedulePage:a,showEventOverviewPage:a,showEventsPage:a,showIndexSecondaryBtn:a,showIndexSponsorSection:b,showProposalSystemPage:a,showRegistrationPage:a,showSpeakingPage:a,showSponsorPage:a,showVenuePage:b,aboutHideItems:["apacCommunity"],conferenceHideItems:["panelDiscussion"],eventsHideItems:["jobs"],registrationHideItems:[],venueHideItems:["venueInfo","accommodation"]},i18n:{routeParams:{}}},serverRendered:a,routePath:"\u002Fzh-hant\u002Fconference\u002Ftalk\u002F338",config:{http:{browserBaseURL:"https:\u002F\u002Fstaging.pycon.tw\u002Fprs"},gtm:{id:"GTM-TNZ39PD"},_app:{basePath:"\u002Fpycontw-frontend\u002F",assetsPath:"\u002Fpycontw-frontend\u002F_nuxt\u002F",cdnURL:d}}}}(true,false,"",null));